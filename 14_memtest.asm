;***
;*** RAM TEST PROGRAMM NACH ELEKTOR APRIL 1982
;***
; found on http://forum.6502.org/viewtopic.php?f=4&t=5265#p62323 and ported to as65
.AUTOIMPORT +
.INCLUDE "std.inc"
.SEGMENT "VECTORS"
	.WORD $8000
	
.CODE
	; ORG	$0000
BEGADR = $0200
ENDADR = $7fff
; BEGADR	DS	2		;HERE PLACE ADDRESS OF FIRST BYTE TO BE CHECKED
; ENDADR	DS	2		;AND HERE ADDRESS OF LAST ONE
;
ACTUAL	=	$E6
PATTERN =	$E5
MEMPTR	=	$FA
;
; TEST MEMORY, STARTING AT BEGADR UPTO ENDADR
;
	JSR	WRZERO		;FILL MEM WITH ZEROES
	JSR	CURBEG		;COPY BEGADR TO ACTUAL
; THIS MAY USED AS A 'WARM' ENTRY
TSTFWD:
	JSR	WALKBIT		;CHECK CELL
	BNE	REPERR		;REPORT ERROR IF NECCESSARY
	LDA	#$FF  		;FILL CHECKED MEMORY WITH $FF
	STA	(ACTUAL),Y	;(DOUBLE ADDRESSING CHECK)
	JSR	INCCHK		;INC ACTUAL, CMP VS. ENDADR
	BCS	TSTFWD		;CONTINUE
;
; TEST MEMORY, STARTING AT ENDADR DOWNTO BEGADR
;
	JSR	WRZERO		;CLEAR MEM.
	LDX	ENDADR		;PRESET ACTUAL-POINTER
	STX	ACTUAL
	LDX	ENDADR+1
	STX	ACTUAL+1
TSTBWD:
	JSR	WALKBIT		;CHECK CELL
	BNE	REPERR		;ERRORS?
	LDA	#$FF  		;SET CELL TO $FF (DOUBLE ADDRESSING CHECK)
	STA	(ACTUAL),Y
	JSR	DECCHK		;DECR. ACTUAL, CHECK VS. BEGADR
	BCS	TSTBWD		;LOOP
	LDA	#$00  		;REPORT 'ALL FINE'
	STA	MEMPTR
	TAX
	NOP
	JMP	OUTXAH		;EXIT !
REPERR:
	LDA	ACTUAL		;REPORT ERROR
	STA	MEMPTR
	LDX	ACTUAL+1
	STX	MEMPTR+1
	JMP	OUTXAH		;DISPLAY ACTUAL ADDRESS, ENTER MONITOR
;
; FILL ALL MEMORY WITH ZERO
;
WRZERO:	JSR	CURBEG
	LDY	#$00
WRZ:	LDA	#$00
	STA	(ACTUAL),Y
	JSR	INCCHK
	BCS	WRZ
	RTS
;
;COPY BEGADR TO ACTUAL
;
CURBEG:
	LDX	BEGADR
	STX	ACTUAL
	LDX	BEGADR+1
	STX	ACTUAL+1
	RTS
;
; INCREMENT ACTUAL , CHECK VS. ENDADR (CY=1 IF ACTUAL < ENDADR)
;
INCCHK:
	INC	ACTUAL
	BNE	CHECK
	INC	ACTUAL+1
CHECK:
	SEC
	LDA	ENDADR
	SBC	ACTUAL
	LDA	ENDADR+1
	SBC	ACTUAL+1
	RTS
;
; DECREMENT ACTUAL , CHECK VS. BEGADR
;
DECCHK:
	SEC
	LDA	ACTUAL
	SBC	#$01
	STA	ACTUAL
	LDA	ACTUAL+1
	SBC	#$00
	STA	ACTUAL+1
	SEC
	LDA	ACTUAL
	SBC	BEGADR
	LDA	ACTUAL+1
	SBC	BEGADR+1
	RTS
;
; SINGLE CELL (BYTE) CHECK
;
; 1. CHECK WHETHER CELL IS EMPTY ( = 0 ) , ABORT IF NOT
; 2. SET EACH BIT SEPERATELY IN ACTUAL CELL AND CHECK IF THIS IS DONE WELL
;
WALKBIT:
	LDA	#$01
	STA	PATTERN		;PREPARE TESTPATTERN
	LDY	#$00
	LDA	(ACTUAL),Y	;EMPTY CHECK (DOUBLE ADDRESSING CHECK)
	BNE	WALKEND
	LDX	#$08  		;8 BITS / BYTE
WALKDO:
	LDA	PATTERN
	STA	(ACTUAL),Y
	CMP	(ACTUAL),Y
	BNE	WALKEND
	ASL	PATTERN
	DEX
	BNE	WALKDO
WALKEND:
	RTS

OUTXAH:
	sta IO_GPIO0

@loop:
	jmp @loop

